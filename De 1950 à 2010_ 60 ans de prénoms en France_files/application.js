// Generated by CoffeeScript 1.6.3
(function() {
  var __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  require(["jquery", "d3", "pubsub", "svg_drawer", "common", "imagesPreloader"], function($, d3, PubSub, svg_drawer, common, imagesPreloader) {
    require(["facebook", "//platform.twitter.com/widgets.js"], function(facebook, twitter) {});
    return $(function() {
      svg_drawer();
      require(["prenoms_list", "prenoms_dataset"], function(prenoms_list, prenoms_dataset) {
        var prenom_data, prenoms, _i, _len, _ref, _results;
        prenoms_list();
        prenoms = window.location.hash.replace(/^#/, '').split(",");
        _results = [];
        for (_i = 0, _len = prenoms_dataset.length; _i < _len; _i++) {
          prenom_data = prenoms_dataset[_i];
          if (_ref = prenom_data.unique_id, __indexOf.call(prenoms, _ref) >= 0) {
            _results.push(PubSub.publish("prenom:add", prenom_data));
          } else {
            _results.push(void 0);
          }
        }
        return _results;
      });
      $("form#search").submit(function() {
        var v;
        v = $(this).find("input[type=text]").val().toLowerCase();
        v = common.remove_accents(v);
        $("form#search a.clear").toggle(v.length > 0);
        d3.selectAll("#prenoms_list_container ul li").each(function(prenom_data) {
          var display;
          if (prenom_data.search_text.indexOf(v) === -1) {
            display = "none";
          } else {
            display = "";
          }
          d3.select(this).style("display", display);
          return null;
        });
        return false;
      });
      $("form#search input[type=text]").keyup(function() {
        return $("form#search a.clear").toggle($(this).val().length > 0);
      });
      $("form#search a.clear").click(function() {
        $("form#search input[type=text]").val("");
        $("#prenoms_list_container ul li").show();
        return false;
      });
      $("input#share_result").focus(function() {
        return this.select();
      });
      $(window).resize(function() {
        var margin_right, min_svg_width, svg_height, svg_width;
        margin_right = 40;
        min_svg_width = parseInt($("#content").css("min-width")) - parseInt($("#left_side").css("min-width")) - margin_right;
        svg_width = Math.max(min_svg_width, $(window).width() - $("#left_side").width() - 20);
        $("#bottom").width(svg_width - 178);
        $("#right_side").css({
          width: svg_width - margin_right
        });
        svg_height = $(window).height() + parseInt($("svg").css("margin-top")) - $("#bottom").outerHeight(true) - 20;
        $("#prenoms_list_container").css({
          height: $(window).height() - $("#title").outerHeight(true) - $("#search").outerHeight(true) - parseInt($("#prenoms_list_container").css("padding-top")) - parseInt($("#prenoms_list_container").css("padding-bottom")) - 30
        });
        $("form#search input[type=text]").width($("#prenoms_list_container").width() - 50);
        d3.select("svg").attr("width", svg_width).attr("height", svg_height);
        return PubSub.publish("window:resize", [svg_width, svg_height]);
      });
      $(window).resize();
      $("#bottom a img").hover(function() {
        return this.src = this.src.replace(/\.png$/, '_over.png');
      }, function() {
        return this.src = this.src.replace(/_over\.png$/, '.png');
      });
      return (function() {
        var prenoms, update_location_hash;
        prenoms = [];
        $("input#share_result").val(window.location);
        update_location_hash = function(msg, prenom_data) {
          if (msg === "prenom:add") {
            prenoms.push(prenom_data.unique_id);
          } else {
            prenoms = prenoms.filter(function(p) {
              return p !== prenom_data.unique_id;
            });
          }
          window.location.hash = prenoms.join(",");
          return $("input#share_result").val(window.location);
        };
        PubSub.subscribe("prenom:add", update_location_hash);
        return PubSub.subscribe("prenom:remove", update_location_hash);
      })();
    });
  });

}).call(this);
